require('./server/Player')
require('./server/Trap')
require('./server/Square')
require('./server/Floor')
require('./server/Spinner')

function randomColor()
{
	var color ="#";
	var letters = "0123456789ABCDEF";
	for(var i =0;i<6;i++)
	{
		color += letters[Math.floor(Math.random() * 16)];
	}
	return color;
}

var express = require('express');
var app = express();
var serv = require('http').Server(app);

app.get('/',function(req, res) {
	res.sendFile(__dirname + '/client/index.html');
});
app.use('/client',express.static(__dirname + '/client'));

serv.listen(420);

SOCKET_LIST = {};
var CANVAS = {
	width:800,
	height:600
}
var INTERVAL;
var GAME_SPEED = 15;

GRAVITY = 1;
TRAPS = [];
GENERAL_SIZE =50;
GENERAL_TIMER = 0;
SQARE_DENSITY = GENERAL_SIZE;



TRAPS.push(new Floor(0,550,10));
TRAPS.push(new Spinner(0,500));
TRAPS.push(new Spinner(200,250));
TRAPS.push(new Floor(200,200,4));


TRAPS.push(new Floor(200,300,3));
TRAPS.push(new Spinner(450,250));
TRAPS.push(new Floor(500,250,20));
TRAPS.push(new Floor(50,500,20));
//check connections between blocks
for(var i in TRAPS)
{
	TRAPS[i].checkForMover();
}

var io = require('socket.io')(serv,{});
io.sockets.on('connection',function(socket){
	
	var random = Math.random();
	socket.player = new Player(random,randomColor());
	SOCKET_LIST[random] = socket;
	socket.on("disconnect",function(){
		delete SOCKET_LIST[socket.player.id];
	})
	socket.on("playerJump",function(){
		socket.player.jump();
	})
	socket.on("playerMove",function(direction){
		socket.player.move(direction);
	})
})

function update()
{
	
	if(GENERAL_TIMER>=360)GENERAL_TIMER=0;
	GENERAL_TIMER+=1;
	var pack = {
		players:[],
		traps:TRAPS
	};
	for(var g=0;g<TRAPS.length;g++)
	{
		TRAPS[g].update();
	}
	
	for(var i in SOCKET_LIST)
	{
		var socket = SOCKET_LIST[i];
		socket.player.update();
		pack.players.push(socket.player)
	}
	for(var i in SOCKET_LIST)
	{
		var socket = SOCKET_LIST[i];
		socket.emit("gameData",pack);
	}
} 
INTERVAL = setInterval(update,GAME_SPEED);


